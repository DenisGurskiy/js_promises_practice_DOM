{"mappings":"ACGA,IAAM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAM,EAAQ,WAAW,WACvB,EAAO,6BACT,EAAG,KAEH,SAAS,gBAAgB,CAAC,QAAS,WACjC,aAAa,GACb,EAAQ,6BACV,EACF,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA5C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACvC,EAAQ,8BACV,EACF,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAW,CAAA,EACX,EAAY,CAAA,EAEhB,SAAS,gBAAgB,CAAC,QAAS,WAC7B,GACF,EAAQ,8BAGV,EAAW,CAAA,CACb,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACnC,GACF,EAAQ,8BAGV,EAAY,CAAA,CACd,EACF,GAEM,EAAU,SAAC,CAAjB,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,MAEnC,CAAA,EAAI,SAAS,CAAG,UAChB,EAAI,OAAO,CAAC,EAAE,CAAG,eACjB,EAAI,WAAW,CAAG,EAClB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEM,EAAQ,SAAC,CAAf,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,MAEnC,CAAA,EAAI,SAAS,CAAG,QAChB,EAAI,OAAO,CAAC,EAAE,CAAG,eACjB,EAAI,WAAW,CAAG,EAClB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEA,EACG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAQ,EAC1B,GAAA,KAAK,CAAC,SAAC,CAAP,EAAmB,OAAA,EAAM,E,GAE5B,EACG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAQ,EAC1B,GAAA,KAAK,CAAC,SAAC,CAAP,EAAmB,OAAA,EAAM,E,GAE5B,EACG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAQ,EAC1B,GAAA,KAAK,CAAC,SAAC,CAAP,EAAmB,OAAA,EAAM,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable prefer-promise-reject-errors */ \"use strict\";\nvar firstPromise = new Promise(function(resolve, reject) {\n    var timer = setTimeout(function() {\n        reject(\"First promise was rejected\");\n    }, 3000);\n    document.addEventListener(\"click\", function() {\n        clearTimeout(timer);\n        resolve(\"First promise was resolved\");\n    });\n});\nvar secondPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve, reject) {\n    var flagLeft = false;\n    var flagRight = false;\n    document.addEventListener(\"click\", function() {\n        if (flagRight) resolve(\"Third promise was resolved\");\n        flagLeft = true;\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        if (flagLeft) resolve(\"Third promise was resolved\");\n        flagRight = true;\n    });\n});\nvar success = function(message) {\n    var div = document.createElement(\"div\");\n    div.className = \"success\";\n    div.dataset.qa = \"notification\";\n    div.textContent = message;\n    document.body.appendChild(div);\n};\nvar error = function(message) {\n    var div = document.createElement(\"div\");\n    div.className = \"error\";\n    div.dataset.qa = \"notification\";\n    div.textContent = message;\n    document.body.appendChild(div);\n};\nfirstPromise.then(function(message) {\n    return success(message);\n}).catch(function(message) {\n    return error(message);\n});\nsecondPromise.then(function(message) {\n    return success(message);\n}).catch(function(message) {\n    return error(message);\n});\nthirdPromise.then(function(message) {\n    return success(message);\n}).catch(function(message) {\n    return error(message);\n});\n\n//# sourceMappingURL=index.25751f02.js.map\n","/* eslint-disable prefer-promise-reject-errors */\n'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const timer = setTimeout(() => {\n    reject('First promise was rejected');\n  }, 3000);\n\n  document.addEventListener('click', () => {\n    clearTimeout(timer);\n    resolve('First promise was resolved');\n  });\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let flagLeft = false;\n  let flagRight = false;\n\n  document.addEventListener('click', () => {\n    if (flagRight) {\n      resolve('Third promise was resolved');\n    }\n\n    flagLeft = true;\n  });\n\n  document.addEventListener('contextmenu', () => {\n    if (flagLeft) {\n      resolve('Third promise was resolved');\n    }\n\n    flagRight = true;\n  });\n});\n\nconst success = (message) => {\n  const div = document.createElement('div');\n\n  div.className = 'success';\n  div.dataset.qa = 'notification';\n  div.textContent = message;\n  document.body.appendChild(div);\n};\n\nconst error = (message) => {\n  const div = document.createElement('div');\n\n  div.className = 'error';\n  div.dataset.qa = 'notification';\n  div.textContent = message;\n  document.body.appendChild(div);\n};\n\nfirstPromise\n  .then((message) => success(message))\n  .catch((message) => error(message));\n\nsecondPromise\n  .then((message) => success(message))\n  .catch((message) => error(message));\n\nthirdPromise\n  .then((message) => success(message))\n  .catch((message) => error(message));\n"],"names":["firstPromise","Promise","resolve","reject","timer","setTimeout","document","addEventListener","clearTimeout","secondPromise","thirdPromise","flagLeft","flagRight","success","message","div","createElement","className","dataset","qa","textContent","body","appendChild","error","then","catch"],"version":3,"file":"index.25751f02.js.map"}